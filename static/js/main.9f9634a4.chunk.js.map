{"version":3,"sources":["components/PrimaryAppBar.js","components/Comments.js","utils/Api.js","components/MarkdownMembrane.js","App.js","serviceWorker.js","index.js","posts/Keepwaiting.md"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","inputRoot","color","sectionDesktop","sectionMobile","buttons","textTransform","fontFamily","fontWeight","backgroundColor","PrimaryAppBar","classes","React","useState","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","createMuiTheme","props","MuiButtonBase","disableRipple","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","MenuItem","className","Typography","AppBar","position","style","boxShadow","Toolbar","Button","edge","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","comment","inline","lowText","Comments","Box","flexDirection","p","Avatar","src","commentData","ImgSrc","userName","createdDateTime","Link","target","rel","href","commentUrl","axios","create","baseURL","responseType","markdownText","paddingLeft","paddingRight","paddingBottom","MarkdownMembrane","input","setInput","useEffect","fetch","markDownFilePath","then","response","text","divRef","useRef","maxWidth","myRef","getWidth","useCallback","current","offsetWidth","undefined","width","setWidth","handleResize","window","addEventListener","removeEventListener","useResize","renderers","image","alt","ref","source","App","state","markDownContent","commentsData","this","updateCommentsState","Api","get","setState","data","map","createCommentData","commentDetails","body","user","avatar_url","html_url","login","created_at","Grid","container","justify","root","item","xs","sm","contentFilePath","variant","commentDataObject","Component","withStyles","paper","padding","control","margin","link","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"oVAUMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BC,MAAM,aACJC,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,UAGbG,UAAW,CACTC,MAAO,WAETC,eAAe,aACbL,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGbM,cAAc,aACZN,QAAS,QACRP,EAAMQ,YAAYC,GAAG,MAAQ,CAC5BF,QAAS,SAGbO,QAAS,CACPC,cAAe,OACfC,WAAY,oJAIZC,WAAY,IACZ,UAAW,CACTC,gBAAiB,gBAKR,SAASC,IACtB,IAAMC,EAAUtB,IADsB,EAEhBuB,IAAMC,SAAS,MAA9BC,EAF+B,sBAGcF,IAAMC,SAAS,MAH7B,mBAG/BE,EAH+B,KAGXC,EAHW,KAKhCC,EAAmBC,QAAQH,GAE3BxB,EAAQ4B,YAAe,CAC3BC,MAAO,CACLC,cAAe,CACbC,eAAe,MAoBfC,EACF,kBAACC,EAAA,EAAD,CACIC,SAAUV,EACVW,aAAc,CAACC,SAAU,MAAOC,WAAY,SAC5CC,GALa,qCAMbC,aAAW,EACXC,gBAAiB,CAACJ,SAAU,MAAOC,WAAY,SAC/CI,KAAMf,EACNgB,QAnBsB,WAC5BjB,EAAsB,QAmBlB,kBAACkB,EAAA,EAAD,CAAUC,UAAWxB,EAAQN,SAC3B,kBAAC+B,EAAA,EAAD,oBAEF,kBAACF,EAAA,EAAD,CAAUC,UAAWxB,EAAQN,SAC3B,kBAAC+B,EAAA,EAAD,cAEF,kBAACF,EAAA,EAAD,CAAUC,UAAWxB,EAAQN,SAC3B,kBAAC+B,EAAA,EAAD,kBAKR,OACI,kBAAC,IAAD,CAAkB7C,MAAOA,GACvB,yBAAK4C,UAAWxB,EAAQnB,MACtB,kBAAC6C,EAAA,EAAD,CAAQC,SAAS,SAASpC,MAAO,cACzBqC,MAAO,CAACC,UAAW,SACzB,kBAACC,EAAA,EAAD,KACE,yBAAKN,UAAWxB,EAAQnB,OACxB,yBAAK2C,UAAWxB,EAAQR,gBACtB,kBAACuC,EAAA,EAAD,CAAQP,UAAWxB,EAAQN,QAASkC,MAAO,CAAC5C,YAAa,IACjDO,MAAM,WACZ,kBAACkC,EAAA,EAAD,oBAEF,kBAACM,EAAA,EAAD,CAAQP,UAAWxB,EAAQN,QAASkC,MAAO,CAAC5C,YAAa,IACjDO,MAAM,WACZ,kBAACkC,EAAA,EAAD,cAEF,kBAACM,EAAA,EAAD,CAAQP,UAAWxB,EAAQN,QAASkC,MAAO,CAAC5C,YAAa,IACjDgD,KAAK,MACLC,aAAW,0BACXC,gBA3CP,8BA4COC,gBAAc,OACdC,QAzDQ,SAACC,GAC7BlC,EAAYkC,EAAMC,gBAyDE/C,MAAM,WAEZ,kBAACkC,EAAA,EAAD,kBAGJ,yBAAKD,UAAWxB,EAAQP,eACtB,kBAACsC,EAAA,EAAD,CAAQP,UAAWxB,EAAQN,QACnBuC,aAAW,YACXC,gBApDD,qCAqDCC,gBAAc,OACdC,QA5DO,SAACC,GAC5BhC,EAAsBgC,EAAMC,gBA4DR/C,MAAM,WAEZ,kBAACkC,EAAA,EAAD,gBAKPb,I,+BC1ILlC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,SAAU,GAEZyD,QAAS,CACP3C,WAAY,qJAKd4C,OAAQ,CACNrD,QAAS,SACTH,YAAa,IAEfyD,QAAS,CACPtD,QAAS,SACTH,YAAa,GACbO,MAAO,eAII,SAASmD,EAASjC,GAC/B,IAAMT,EAAUtB,IAChB,OACE,6BACE,kBAACiE,EAAA,EAAD,CAAKxD,QAAQ,OAAOyD,cAAc,MAAMC,EAAG,GACzC,kBAACF,EAAA,EAAD,CAAKE,EAAG,GACN,kBAACC,EAAA,EAAD,CAAQC,IAAKtC,EAAMuC,YAAYC,UAEjC,kBAACN,EAAA,EAAD,CAAKE,EAAG,GACN,kBAACpB,EAAA,EAAD,CAAYD,UAAWxB,EAAQwC,QAAS/B,EAAMuC,YAAYE,UAC1D,kBAACzB,EAAA,EAAD,CAAYD,UAAWxB,EAAQyC,SAAUhC,EAAMuC,YAAYG,iBAC3D,kBAACC,EAAA,EAAD,CAAMC,OAAO,SAASC,IAAI,sBAAsBC,KAAM9C,EAAMuC,YAAYQ,WAAYjE,MAAM,UAAUiC,UAAWxB,EAAQyC,SAAvH,IAAkIhC,EAAMuC,YAAY9B,IACpJ,kBAACO,EAAA,EAAD,CAAYD,UAAWxB,EAAQuC,SAAU9B,EAAMuC,YAAYT,Y,YCnCtDkB,E,OAAAA,EAAMC,OAAO,CAC1BC,QAAS,qEACTC,aAAc,S,iBCAVlF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFC,SAAU,GAEd+E,aAAc,CACVC,YAAa,GACbC,aAAc,GACdC,cAAe,QAIR,SAASC,EAAiBxD,GACrC,IAAMT,EAAUtB,IAD4B,EA2BlBwB,mBAAS,IA3BS,mBA2BrCgE,EA3BqC,KA2B9BC,EA3B8B,KA4B5CC,qBAAU,WACNC,MAAM5D,EAAM6D,kBAAkBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAAQF,MAAK,SAACE,GACpEN,EAASM,QAEd,CAAChE,EAAM6D,mBAEV,IAAMI,EAASC,iBAAO,MAChBC,EAhCY,SAACC,GACf,IAAMC,EAAWC,uBAAY,kBAAMF,EAAMG,QAAQC,cAAa,CAACJ,IADtC,EAGC3E,wBAASgF,GAHV,mBAGlBC,EAHkB,KAGXC,EAHW,KAqBzB,OAhBAhB,qBAAU,WACN,IAAMiB,EAAe,WACjBD,EAASN,MASb,OANID,EAAMG,SACNI,EAASN,KAGbQ,OAAOC,iBAAiB,SAAUF,GAE3B,WACHC,OAAOE,oBAAoB,SAAUH,MAE1C,CAACR,EAAOC,IAEJK,GAASA,EAAQ,GAAKA,EAAQ,GAAKA,EAW7BM,CAAUf,GAErBgB,EAAY,CACdC,MAAO,gBACHC,EADG,EACHA,IACA7C,EAFG,EAEHA,IACA7D,EAHG,EAGHA,MAHG,OAKC,yBACI0G,IAAKA,EACL7C,IAAKA,EACL7D,MAAOA,EACP0C,MAAO,CAAEgD,SAAUA,OAInC,OACI,yBACAiB,IAAKnB,GACD,kBAAC,IAAD,CACAoB,OAAQ5B,EACR1C,UAAWxB,EAAQ6D,aACnB6B,UAAWA,EACXd,SAAUA,KC9DtB,IAqBMmB,E,kDACJ,WAAYtF,GAAQ,IAAD,8BACjB,cAAMA,IACDuF,MAAQ,CAAEC,gBAAiB,KAAMC,aAAc,IAFnC,E,gEAMjBC,KAAKC,wB,4CAGgB,IAAD,OACpBC,EAAIC,IAAI,sBACL/B,MAAK,SAACC,GACL,EAAK+B,SAAS,CAAEL,aAAc1B,EAASgC,KAAKC,KAAI,SAAAlE,GAAO,OAAI,EAAKmE,kBAAkBnE,a,wCAItEA,GAChB,IAAIoE,EAAiB,GAOrB,OANAA,EAAc,QAAcpE,EAAQqE,KACpCD,EAAc,OAAapE,EAAQsE,KAAKC,WACxCH,EAAc,WAAiBpE,EAAQwE,SACvCJ,EAAc,GAASpE,EAAQrB,GAC/ByF,EAAc,SAAepE,EAAQsE,KAAKG,MAC1CL,EAAc,gBAAsBpE,EAAQ0E,WACrCN,I,+BAGC,IACA3G,EAAYmG,KAAK1F,MAAjBT,QACR,OACE,yBAAKwB,UAAW,OACd,kBAACzB,EAAD,MACA,kBAACmH,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAQ,SAAS5F,UAAWxB,EAAQqH,MAClD,kBAACH,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,+BAEF,kBAACN,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,6BACE,kBAACvD,EAAD,CAAkBK,iBAAkBmD,OAGtC,sDAA2B,8BACzB,uBAAGlE,KAAK,oEACNF,OAAO,SAASC,IAAI,uBADtB,eADF,gDAIA,kBAAC7B,EAAA,EAAD,CAAYiG,QAAS,MAArB,aACCvB,KAAKH,MAAME,aAAaO,KAAI,SAAAkB,GAAiB,OAC5C,kBAACjF,EAAD,CAAUM,YAAa2E,QAG3B,kBAACT,EAAA,EAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GACrB,qC,GApDMI,aA4DHC,eAjFG,SAACjJ,GAAD,MAAY,CAC5ByI,KAAM,CACJvI,SAAU,GAEZgJ,MAAO,CACLC,QAASnJ,EAAMK,QAAQ,IAEzB+I,QAAS,CACPD,QAASnJ,EAAMK,QAAQ,IAEzB4E,aAAc,CACZoE,OAAQ,IAEVC,KAAM,CACJtI,WAAY,wJAmEDiI,CAAsB9B,GChFjBxF,QACW,cAA7B+E,OAAO6C,SAASC,UAEe,UAA7B9C,OAAO6C,SAASC,UAEhB9C,OAAO6C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBtE,MAAK,SAAAuE,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,mBEzI5BC,EAAOC,QAAU,IAA0B,wC","file":"static/js/main.9f9634a4.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'flex',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  buttons: {\n    textTransform: 'none',\n    fontFamily: '-apple-system, BlinkMacSystemFont,'\n        + ' \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\','\n        + ' \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\','\n        + ' \\'Helvetica Neue\\', sans-serif',\n    fontWeight: 600,\n    \"&:hover\": {\n      backgroundColor: \"#fffffc\"\n    }\n  }\n}));\n\nexport default function PrimaryAppBar() {\n  const classes = useStyles();\n  const [setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const theme = createMuiTheme({\n    props: {\n      MuiButtonBase: {\n        disableRipple: true\n      }\n    }\n  });\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n      <Menu\n          anchorEl={mobileMoreAnchorEl}\n          anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n          id={mobileMenuId}\n          keepMounted\n          transformOrigin={{vertical: 'top', horizontal: 'right'}}\n          open={isMobileMenuOpen}\n          onClose={handleMobileMenuClose}>\n        <MenuItem className={classes.buttons}>\n          <Typography>Categories</Typography>\n        </MenuItem>\n        <MenuItem className={classes.buttons}>\n          <Typography>Tags</Typography>\n        </MenuItem>\n        <MenuItem className={classes.buttons}>\n          <Typography>Contact</Typography>\n        </MenuItem>\n      </Menu>\n  );\n\n  return (\n      <MuiThemeProvider theme={theme}>\n        <div className={classes.grow}>\n          <AppBar position=\"static\" color={'transparent'}\n                  style={{boxShadow: 'none'}}>\n            <Toolbar>\n              <div className={classes.grow}/>\n              <div className={classes.sectionDesktop}>\n                <Button className={classes.buttons} style={{marginRight: 90}}\n                        color=\"inherit\">\n                  <Typography>Categories</Typography>\n                </Button>\n                <Button className={classes.buttons} style={{marginRight: 90}}\n                        color=\"inherit\">\n                  <Typography>Tags</Typography>\n                </Button>\n                <Button className={classes.buttons} style={{marginRight: 90}}\n                        edge=\"end\"\n                        aria-label=\"account of current user\"\n                        aria-controls={menuId}\n                        aria-haspopup=\"true\"\n                        onClick={handleProfileMenuOpen}\n                        color=\"inherit\"\n                >\n                  <Typography>Contact</Typography>\n                </Button>\n              </div>\n              <div className={classes.sectionMobile}>\n                <Button className={classes.buttons}\n                        aria-label=\"show more\"\n                        aria-controls={mobileMenuId}\n                        aria-haspopup=\"true\"\n                        onClick={handleMobileMenuOpen}\n                        color=\"inherit\"\n                >\n                  <Typography>|||</Typography>\n                </Button>\n              </div>\n            </Toolbar>\n          </AppBar>\n          {renderMobileMenu}\n          {/*{renderMenu}*/}\n        </div>\n      </MuiThemeProvider>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Box, Link, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  comment: {\n    fontFamily: '-apple-system, BlinkMacSystemFont,'\n      + ' \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\','\n      + ' \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\','\n      + ' \\'Helvetica Neue\\', sans-serif',\n  },\n  inline: {\n    display: 'inline',\n    marginRight: 20,\n  },\n  lowText: {\n    display: 'inline',\n    marginRight: 20,\n    color: '#808080'\n  }\n}));\n\nexport default function Comments(props) {\n  const classes = useStyles();\n  return (\n    <div>\n      <Box display=\"flex\" flexDirection=\"row\" p={1}>\n        <Box p={1}>\n          <Avatar src={props.commentData.ImgSrc}></Avatar>\n        </Box>\n        <Box p={1}>\n          <Typography className={classes.inline}>{props.commentData.userName}</Typography>\n          <Typography className={classes.lowText}>{props.commentData.createdDateTime}</Typography>\n          <Link target=\"_blank\" rel=\"noopener noreferrer\" href={props.commentData.commentUrl} color=\"inherit\" className={classes.lowText}>#{props.commentData.id}</Link>\n          <Typography className={classes.comment}>{props.commentData.comment}</Typography>\n        </Box>\n      </Box>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nexport default axios.create({\n  baseURL: 'https://api.github.com/repos/akhil-ghatiki/akhil-ghatiki.github.io',\n  responseType: 'json'\n});\n","import React, { useState, useEffect,useRef,useCallback  } from 'react';\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ReactMarkdown from 'react-markdown'\n\nconst useStyles = makeStyles((theme) => ({\n    grow: {\n        flexGrow: 1,\n    },\n    markdownText: {\n        paddingLeft: 30,\n        paddingRight: 30,\n        paddingBottom: 30\n    }\n}));\n\nexport default function MarkdownMembrane(props) {\n    const classes = useStyles();\n\n    const useResize = (myRef) => {\n        const getWidth = useCallback(() => myRef.current.offsetWidth, [myRef]);\n    \n        const [width, setWidth] = useState(undefined);\n    \n        useEffect(() => {\n            const handleResize = () => {\n                setWidth(getWidth());\n            };\n    \n            if (myRef.current) {\n                setWidth(getWidth());\n            }\n    \n            window.addEventListener('resize', handleResize);\n    \n            return () => {\n                window.removeEventListener('resize', handleResize);\n            };\n        }, [myRef, getWidth]);\n    \n        return width && width > 25 ? width - 25 : width;\n    };\n    \n    const [input, setInput] = useState('');\n    useEffect(() => {\n        fetch(props.markDownFilePath).then((response) => response.text()).then((text) => {\n            setInput(text)\n        })\n    }, [props.markDownFilePath]);\n\n    const divRef = useRef(null);\n    const maxWidth = useResize(divRef);\n\n    const renderers = {\n        image: ({\n            alt,\n            src,\n            title,\n        }) => (\n                <img\n                    alt={alt}\n                    src={src}\n                    title={title}\n                    style={{ maxWidth: maxWidth }} />\n            ),\n    };\n\n    return (\n        <div \n        ref={divRef}>\n            <ReactMarkdown \n            source={input} \n            className={classes.markdownText} \n            renderers={renderers}\n            maxWidth={maxWidth}>\n            </ReactMarkdown>\n        </div>\n    );\n}\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport './App.css';\nimport contentFilePath from './posts/Keepwaiting.md';\nimport Grid from '@material-ui/core/Grid';\nimport PrimaryAppBar2 from \"./components/PrimaryAppBar\";\nimport Comments from \"./components/Comments\";\nimport Typography from '@material-ui/core/Typography';\nimport Api from \"./utils/Api\";\nimport MarkdownMembrane from \"./components/MarkdownMembrane\";\n\nconst useStyles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  markdownText: {\n    margin: 30\n  },\n  link: {\n    fontFamily: '-apple-system, BlinkMacSystemFont,'\n      + ' \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\','\n      + ' \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\','\n      + ' \\'Helvetica Neue\\', sans-serif',\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = { markDownContent: null, commentsData: [] }\n  }\n\n  componentDidMount() {\n    this.updateCommentsState();\n  }\n\n  updateCommentsState() {\n    Api.get('/issues/1/comments')\n      .then((response) => {\n        this.setState({ commentsData: response.data.map(comment => this.createCommentData(comment)) })\n      });\n  }\n\n  createCommentData(comment) {\n    let commentDetails = {};\n    commentDetails['comment'] = comment.body;\n    commentDetails['ImgSrc'] = comment.user.avatar_url;\n    commentDetails['commentUrl'] = comment.html_url;\n    commentDetails['id'] = comment.id;\n    commentDetails['userName'] = comment.user.login;\n    commentDetails['createdDateTime'] = comment.created_at;\n    return commentDetails;\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={'App'}>\n        <PrimaryAppBar2></PrimaryAppBar2>\n        <Grid container justify=\"center\" className={classes.root}>\n          <Grid item xs={12} sm={2}>\n            <div></div>\n          </Grid>\n          <Grid item xs={12} sm={8}>\n            <div>\n              <MarkdownMembrane markDownFilePath={contentFilePath}>\n              </MarkdownMembrane>\n            </div>\n            <p>Try adding a comment in <span>\n              <a href=\"https://github.com/akhil-ghatiki/akhil-ghatiki.github.io/issues/1\"\n                target=\"_blank\" rel=\"noopener noreferrer\">this issue</a></span> and it should show up\n                in the comments below</p>\n            <Typography variant={\"h6\"}>Comments:</Typography>\n            {this.state.commentsData.map(commentDataObject =>\n              <Comments commentData={commentDataObject}></Comments>\n            )}\n          </Grid>\n          <Grid item xs={12} sm={2}>\n            <div></div>\n          </Grid>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Keepwaiting.ce6a0e7c.md\";"],"sourceRoot":""}
{"version":3,"sources":["components/PrimaryAppBar.js","App.js","serviceWorker.js","index.js","Keepwaiting.md"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","inputRoot","color","sectionDesktop","sectionMobile","buttons","textTransform","fontFamily","fontWeight","backgroundColor","PrimarySearchAppBar","classes","React","useState","anchorEl","setAnchorEl","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMenuOpen","Boolean","isMobileMenuOpen","createMuiTheme","props","MuiButtonBase","disableRipple","handleMobileMenuClose","handleMenuClose","menuId","renderMobileMenu","Menu","MenuItem","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","open","onClose","className","Typography","AppBar","position","style","boxShadow","marginBottom","Toolbar","Button","edge","aria-label","aria-controls","aria-haspopup","onClick","event","currentTarget","App","state","markDownContent","fetch","markDownFilePath","then","response","text","setState","this","src","alt","Grid","container","justify","root","item","xs","sm","markdownText","source","Component","withStyles","paper","padding","control","margin","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.869e2495.chunk.js","sourcesContent":["import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport {createMuiTheme, MuiThemeProvider} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: 'flex',\n    [theme.breakpoints.up('sm')]: {\n      display: 'block',\n    },\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n  sectionDesktop: {\n    display: 'none',\n    [theme.breakpoints.up('md')]: {\n      display: 'flex',\n    },\n  },\n  sectionMobile: {\n    display: 'flex',\n    [theme.breakpoints.up('md')]: {\n      display: 'none',\n    },\n  },\n  buttons: {\n    textTransform: 'none',\n    fontFamily: '-apple-system, BlinkMacSystemFont,'\n        + ' \\'Segoe UI\\', \\'Roboto\\', \\'Oxygen\\','\n        + ' \\'Ubuntu\\', \\'Cantarell\\', \\'Fira Sans\\', \\'Droid Sans\\','\n        + ' \\'Helvetica Neue\\', sans-serif',\n    fontWeight: 600,\n    \"&:hover\": {\n      backgroundColor: \"#fffffc\"\n    }\n  }\n}));\n\nexport default function PrimarySearchAppBar() {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null);\n\n  const isMenuOpen = Boolean(anchorEl);\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\n\n  const theme = createMuiTheme({\n    props: {\n      MuiButtonBase: {\n        disableRipple: true\n      }\n    }\n  });\n\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleMobileMenuClose = () => {\n    setMobileMoreAnchorEl(null);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    handleMobileMenuClose();\n  };\n\n  const handleMobileMenuOpen = (event) => {\n    setMobileMoreAnchorEl(event.currentTarget);\n  };\n\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n      <Menu\n          anchorEl={anchorEl}\n          anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n          id={menuId}\n          keepMounted\n          transformOrigin={{vertical: 'top', horizontal: 'right'}}\n          open={isMenuOpen}\n          onClose={handleMenuClose}\n      >\n        <MenuItem onClick={handleMenuClose}>Profile</MenuItem>\n        <MenuItem onClick={handleMenuClose}>My account</MenuItem>\n      </Menu>\n  );\n\n  const mobileMenuId = 'primary-search-account-menu-mobile';\n  const renderMobileMenu = (\n      <Menu\n          anchorEl={mobileMoreAnchorEl}\n          anchorOrigin={{vertical: 'top', horizontal: 'right'}}\n          id={mobileMenuId}\n          keepMounted\n          transformOrigin={{vertical: 'top', horizontal: 'right'}}\n          open={isMobileMenuOpen}\n          onClose={handleMobileMenuClose}>\n        <MenuItem className={classes.buttons}>\n          <Typography>Categories</Typography>\n        </MenuItem>\n        <MenuItem className={classes.buttons}>\n          <Typography>Tags</Typography>\n        </MenuItem>\n        <MenuItem className={classes.buttons}>\n          <Typography>Contact</Typography>\n        </MenuItem>\n      </Menu>\n  );\n\n  return (\n      <MuiThemeProvider theme={theme}>\n        <div className={classes.grow}>\n          <AppBar position=\"static\" color={'transparent'}\n                  style={{boxShadow: 'none', marginBottom: 30}}>\n            <Toolbar>\n              <div className={classes.grow}/>\n              <div className={classes.sectionDesktop}>\n                <Button className={classes.buttons} style={{marginRight: 90}}\n                        color=\"inherit\">\n                  <Typography>Categories</Typography>\n                </Button>\n                <Button className={classes.buttons} style={{marginRight: 90}}\n                        color=\"inherit\">\n                  <Typography>Tags</Typography>\n                </Button>\n                <Button className={classes.buttons} style={{marginRight: 90}}\n                        edge=\"end\"\n                        aria-label=\"account of current user\"\n                        aria-controls={menuId}\n                        aria-haspopup=\"true\"\n                        onClick={handleProfileMenuOpen}\n                        color=\"inherit\"\n                >\n                  <Typography>Contact</Typography>\n                </Button>\n              </div>\n              <div className={classes.sectionMobile}>\n                <Button className={classes.buttons}\n                        aria-label=\"show more\"\n                        aria-controls={mobileMenuId}\n                        aria-haspopup=\"true\"\n                        onClick={handleMobileMenuOpen}\n                        color=\"inherit\"\n                >\n                  <Typography>|||</Typography>\n                </Button>\n              </div>\n            </Toolbar>\n          </AppBar>\n          {renderMobileMenu}\n          {/*{renderMenu}*/}\n        </div>\n      </MuiThemeProvider>\n  );\n}\n","import React, {Component} from 'react';\nimport {withStyles} from '@material-ui/core/styles';\nimport './App.css';\nimport markDownFilePath from './Keepwaiting.md';\nimport Grid from '@material-ui/core/Grid';\nimport ReactMarkdown from 'react-markdown'\nimport PrimaryAppBar2 from \"./components/PrimaryAppBar\";\n\nconst useStyles = (theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n  },\n  control: {\n    padding: theme.spacing(2),\n  },\n  markdownText: {\n    margin: 30\n  }\n});\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {markDownContent: null}\n  }\n\n  componentWillMount() {\n    fetch(markDownFilePath).then((response) => response.text()).then((text) => {\n      this.setState({markDownContent: text})\n    })\n  }\n\n  render() {\n    const {classes} = this.props;\n    return (\n        <div className={'App'}>\n          <PrimaryAppBar2></PrimaryAppBar2>\n          <img src={'./spacetimeRect.svg'} alt={\"poster\"} className={'image'}></img>\n          <Grid container justify=\"center\" className={classes.root}>\n            <Grid item xs={12} sm={2}>\n              <div></div>\n            </Grid>\n            <Grid item xs={12} sm={8}>\n              <div>\n                <ReactMarkdown className={classes.markdownText}\n                    source={this.state.markDownContent}></ReactMarkdown>\n              </div>\n            </Grid>\n            <Grid item xs={12} sm={2}>\n              <div></div>\n            </Grid>\n          </Grid>\n        </div>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <React.StrictMode>\n      <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Keepwaiting.ef265cbb.md\";"],"sourceRoot":""}